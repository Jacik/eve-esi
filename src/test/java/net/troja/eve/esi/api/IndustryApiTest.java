/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.33
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.troja.eve.esi.api;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.CharacterIndustryJobsResponse;
import net.troja.eve.esi.model.CharacterMiningResponse;
import net.troja.eve.esi.model.CorporationIndustryJobsResponse;
import net.troja.eve.esi.model.CorporationMiningExtractionsResponse;
import net.troja.eve.esi.model.CorporationMiningObserverResponse;
import net.troja.eve.esi.model.CorporationMiningObserversResponse;
import net.troja.eve.esi.model.IndustryFacilitiesResponse;
import net.troja.eve.esi.model.IndustrySystemsResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * API tests for IndustryApi
 */
public class IndustryApiTest extends GeneralApiTest {

    private final IndustryApi api = new IndustryApi();

    @BeforeEach
    public void setUp() {
        api.setApiClient(apiClient);
    }

    /**
     * List character industry jobs
     *
     * List industry jobs placed by a character  ---  This route is cached for up to 300 seconds  SSO Scope: esi-industry.read_character_jobs.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdIndustryJobsTest() throws ApiException {
        String ifNoneMatch = null;
        Boolean includeCompleted = null;
        String token = null;
        List<CharacterIndustryJobsResponse> response = api.getCharactersCharacterIdIndustryJobs(characterId, DATASOURCE, ifNoneMatch, includeCompleted, token);
        assertThat(response).isNotNull();
    }

    /**
     * Character mining ledger
     *
     * Paginated record of all mining done by a character for the past 30 days  ---  This route is cached for up to 600 seconds  SSO Scope: esi-industry.read_character_mining.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("No test data")
    public void getCharactersCharacterIdMiningTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<CharacterMiningResponse> response = api.getCharactersCharacterIdMining(characterId, datasource, ifNoneMatch, page, token);
        // TODO: test validations
    }

    /**
     * Moon extraction timers
     *
     * Extraction timers for all moon chunks being extracted by refineries belonging to a corporation.  ---  This route is cached for up to 1800 seconds  --- Requires one of the following EVE corporation role(s): Station_Manager  SSO Scope: esi-industry.read_corporation_mining.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs corporation with read access")
    public void getCorporationCorporationIdMiningExtractionsTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<CorporationMiningExtractionsResponse> response = api.getCorporationCorporationIdMiningExtractions(corporationId, datasource, ifNoneMatch, page, token);
        // TODO: test validations
    }

    /**
     * Corporation mining observers
     *
     * Paginated list of all entities capable of observing and recording mining for a corporation  ---  This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Accountant  SSO Scope: esi-industry.read_corporation_mining.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs corporation with read access")
    public void getCorporationCorporationIdMiningObserversTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<CorporationMiningObserversResponse> response = api.getCorporationCorporationIdMiningObservers(corporationId, datasource, ifNoneMatch, page, token);
        // TODO: test validations
    }

    /**
     * Observed corporation mining
     *
     * Paginated record of all mining seen by an observer  ---  This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Accountant  SSO Scope: esi-industry.read_corporation_mining.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs corporation with read access")
    public void getCorporationCorporationIdMiningObserversObserverIdTest() throws ApiException {
        Integer corporationId = null;
        Long observerId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<CorporationMiningObserverResponse> response = api.getCorporationCorporationIdMiningObserversObserverId(corporationId, observerId, datasource, ifNoneMatch, page, token);
        // TODO: test validations
    }

    /**
     * List corporation industry jobs
     *
     * List industry jobs run by a corporation  ---  This route is cached for up to 300 seconds  --- Requires one of the following EVE corporation role(s): Factory_Manager  SSO Scope: esi-industry.read_corporation_jobs.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs corporation with read access")
    public void getCorporationsCorporationIdIndustryJobsTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Boolean includeCompleted = null;
        Integer page = null;
        String token = null;
        List<CorporationIndustryJobsResponse> response = api.getCorporationsCorporationIdIndustryJobs(corporationId, datasource, ifNoneMatch, includeCompleted, page, token);
        // TODO: test validations
    }

    /**
     * List industry facilities
     *
     * Return a list of industry facilities  ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIndustryFacilitiesTest() throws ApiException {
        String ifNoneMatch = null;
        List<IndustryFacilitiesResponse> response = api.getIndustryFacilities(DATASOURCE, ifNoneMatch);
        assertThat(response).isNotEmpty();
        assertThat(response.get(0).getFacilityId()).isGreaterThan(0);
    }

    /**
     * List solar system cost indices
     *
     * Return cost indices for solar systems  ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIndustrySystemsTest() throws ApiException {
        String ifNoneMatch = null;
        List<IndustrySystemsResponse> response = api.getIndustrySystems(DATASOURCE, ifNoneMatch);
        assertThat(response).isNotEmpty();
        assertThat(response.get(0).getCostIndices()).isNotEmpty();
    }

}
