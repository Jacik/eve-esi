/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.33
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.troja.eve.esi.api;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.DogmaAttributeResponse;
import net.troja.eve.esi.model.DogmaDynamicItemsResponse;
import net.troja.eve.esi.model.DogmaEffectResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * API tests for DogmaApi
 */
public class DogmaApiTest extends GeneralApiTest {

    private final DogmaApi api = new DogmaApi();

    @BeforeEach
    public void setUp() {
        api.setApiClient(apiClient);
    }

    /**
     * Get attributes
     *
     * Get a list of dogma attribute ids  ---  This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDogmaAttributesTest() throws ApiException {
        String ifNoneMatch = null;
        List<Integer> response = api.getDogmaAttributes(DATASOURCE, ifNoneMatch);
        assertThat(response).isNotEmpty();
    }

    /**
     * Get attribute information
     *
     * Get information on a dogma attribute  ---  This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDogmaAttributesAttributeIdTest() throws ApiException {
        Integer attributeId = 165;
        String ifNoneMatch = null;
        DogmaAttributeResponse response = api.getDogmaAttributesAttributeId(attributeId, DATASOURCE, ifNoneMatch);
        assertThat(response.getAttributeId()).isEqualTo(attributeId);
        assertThat(response.getName()).isEqualTo("intelligence");
    }

    /**
     * Get dynamic item information
     *
     * Returns info about a dynamic item resulting from mutation with a mutaplasmid.  ---  This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs dynamic dogma item to test")
    public void getDogmaDynamicItemsTypeIdItemIdTest() throws ApiException {
        Long itemId = null;
        Integer typeId = null;
        String ifNoneMatch = null;
        DogmaDynamicItemsResponse response = api.getDogmaDynamicItemsTypeIdItemId(itemId, typeId, DATASOURCE, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Get effects
     *
     * Get a list of dogma effect ids  ---  This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDogmaEffectsTest() throws ApiException {
        String ifNoneMatch = null;
        List<Integer> response = api.getDogmaEffects(DATASOURCE, ifNoneMatch);
        assertThat(response).isNotEmpty();
    }

    /**
     * Get effect information
     *
     * Get information on a dogma effect  ---  This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDogmaEffectsEffectIdTest() throws ApiException {
        Integer effectId = 254;
        String ifNoneMatch = null;
        DogmaEffectResponse response = api.getDogmaEffectsEffectId(effectId, DATASOURCE, ifNoneMatch);
        assertThat(response.getEffectId()).isEqualTo(effectId);
        assertThat(response.getName()).isEqualTo("shadowBarrageFalloffWithFalloffPostPercentBarrageFalloffMutator");
    }

}
