/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.33
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.troja.eve.esi.api;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.CharacterAssetsLocationsResponse;
import net.troja.eve.esi.model.CharacterAssetsNamesResponse;
import net.troja.eve.esi.model.CharacterAssetsResponse;
import net.troja.eve.esi.model.CorporationAssetsLocationsResponse;
import net.troja.eve.esi.model.CorporationAssetsNamesResponse;
import net.troja.eve.esi.model.CorporationAssetsResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * API tests for AssetsApi
 */
public class AssetsApiTest extends GeneralApiTest {

    private final AssetsApi api = new AssetsApi();

    @BeforeEach
    public void setUp() {
        api.setApiClient(apiClient);
    }

    /**
     * Get character assets
     *
     * Return a list of the characters assets  ---  This route is cached for up to 3600 seconds  SSO Scope: esi-assets.read_assets.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdAssetsTest() throws ApiException {
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<CharacterAssetsResponse> response = api.getCharactersCharacterIdAssets(characterId, DATASOURCE, ifNoneMatch, page, token);
        assertThat(response).isNotNull();
        assertThat(response).hasSizeGreaterThan(0);
        assertThat(response.get(0).getLocationFlag()).isNotNull();
        assertThat(response.get(0).getLocationFlagString()).isNotNull();
        assertThat(response.get(0).getLocationType()).isNotNull();
        assertThat(response.get(0).getLocationTypeString()).isNotNull();
    }

    /**
     * Get corporation assets
     *
     * Return a list of the corporation assets  ---  This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Director  SSO Scope: esi-assets.read_corporation_assets.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs corporation with read access")
    public void getCorporationsCorporationIdAssetsTest() throws ApiException {
        Integer corporationId = null;
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<CorporationAssetsResponse> response = api.getCorporationsCorporationIdAssets(corporationId, DATASOURCE, ifNoneMatch, page, token);
        assertThat(response).isNotNull();
        assertThat(response).hasSizeGreaterThan(0);
    }

    /**
     * Get character asset locations
     *
     * Return locations for a set of item ids, which you can get from character assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)  ---   SSO Scope: esi-assets.read_assets.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCharactersCharacterIdAssetsLocationsTest() throws ApiException {
        Set<Long> itemIds = get5AssetIds();
        String token = null;
        List<CharacterAssetsLocationsResponse> response = api.postCharactersCharacterIdAssetsLocations(characterId, itemIds, DATASOURCE, token);
        assertThat(response).isNotNull();
        assertThat(response).hasSize(5);
    }

    /**
     * Get character asset names
     *
     * Return names for a set of item ids, which you can get from character assets endpoint. Typically used for items that can customize names, like containers or ships.  ---   SSO Scope: esi-assets.read_assets.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCharactersCharacterIdAssetsNamesTest() throws ApiException {
        Set<Long> itemIds = get5AssetIds();
        String token = null;
        List<CharacterAssetsNamesResponse> response = api.postCharactersCharacterIdAssetsNames(characterId, itemIds, DATASOURCE, token);
        assertThat(response).isNotNull();
        assertThat(response).hasSize(5);
    }

    /**
     * Get corporation asset locations
     *
     * Return locations for a set of item ids, which you can get from corporation assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)  ---  Requires one of the following EVE corporation role(s): Director  SSO Scope: esi-assets.read_corporation_assets.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs corporation with read access")
    public void postCorporationsCorporationIdAssetsLocationsTest() throws ApiException {
        Integer corporationId = null;
        Set<Long> itemIds = null;
        String token = null;
        List<CorporationAssetsLocationsResponse> response = api.postCorporationsCorporationIdAssetsLocations(corporationId, itemIds, DATASOURCE, token);
        // TODO: test validations
    }

    /**
     * Get corporation asset names
     *
     * Return names for a set of item ids, which you can get from corporation assets endpoint. Only valid for items that can customize names, like containers or ships  ---  Requires one of the following EVE corporation role(s): Director  SSO Scope: esi-assets.read_corporation_assets.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs corporation with read access")
    public void postCorporationsCorporationIdAssetsNamesTest() throws ApiException {
        Integer corporationId = null;
        Set<Long> itemIds = null;
        String token = null;
        List<CorporationAssetsNamesResponse> response = api.postCorporationsCorporationIdAssetsNames(corporationId, itemIds, DATASOURCE, token);
        // TODO: test validations
    }

    private Set<Long> get5AssetIds() throws ApiException {
        final List<CharacterAssetsResponse> response = api.getCharactersCharacterIdAssets(characterId, DATASOURCE, null, null, null);
        return response.stream().limit(5).map(CharacterAssetsResponse::getItemId).collect(Collectors.toSet());
    }
}
