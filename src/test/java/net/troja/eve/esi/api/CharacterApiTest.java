/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.33
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.troja.eve.esi.api;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.CharacterAffiliationResponse;
import net.troja.eve.esi.model.CharacterBlueprintsResponse;
import net.troja.eve.esi.model.CharacterCorporationHistoryResponse;
import net.troja.eve.esi.model.CharacterFatigueResponse;
import net.troja.eve.esi.model.CharacterMedalsResponse;
import net.troja.eve.esi.model.CharacterNotificationsResponse;
import net.troja.eve.esi.model.CharacterPortraitResponse;
import net.troja.eve.esi.model.CharacterResearchAgentsResponse;
import net.troja.eve.esi.model.CharacterResponse;
import net.troja.eve.esi.model.CharacterRolesResponse;
import net.troja.eve.esi.model.CharacterStandingsResponse;
import net.troja.eve.esi.model.CharacterTitlesResponse;
import net.troja.eve.esi.model.NewContactNotificationsResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * API tests for CharacterApi
 */
public class CharacterApiTest extends GeneralApiTest {

    private final CharacterApi api = new CharacterApi();

    @BeforeEach
    public void setUp() {
        api.setApiClient(apiClient);
    }

    /**
     * Get character&#39;s public information
     *
     * Public information about a character  ---  This route is cached for up to 604800 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdTest() throws ApiException {
        String ifNoneMatch = null;
        CharacterResponse response = api.getCharactersCharacterId(characterId, DATASOURCE, ifNoneMatch);
        assertThat(response).isNotNull();
        assertThat(response.getName()).isEqualTo(characterName);
    }

    /**
     * Get agents research
     *
     * Return a list of agents research information for a character. The formula for finding the current research points with an agent is: currentPoints &#x3D; remainderPoints + pointsPerDay * days(currentTime - researchStartDate)  ---  This route is cached for up to 3600 seconds  SSO Scope: esi-characters.read_agents_research.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdAgentsResearchTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        List<CharacterResearchAgentsResponse> response = api.getCharactersCharacterIdAgentsResearch(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotNull().isNotEmpty();
    }

    /**
     * Get blueprints
     *
     * Return a list of blueprints the character owns  ---  This route is cached for up to 3600 seconds  SSO Scope: esi-characters.read_blueprints.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdBlueprintsTest() throws ApiException {
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<CharacterBlueprintsResponse> response = api.getCharactersCharacterIdBlueprints(characterId, DATASOURCE, ifNoneMatch, page, token);
        assertThat(response).isNotNull().isNotEmpty();
    }

    /**
     * Get corporation history
     *
     * Get a list of all the corporations a character has been a member of  ---  This route is cached for up to 86400 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdCorporationhistoryTest() throws ApiException {
        String ifNoneMatch = null;
        List<CharacterCorporationHistoryResponse> response = api.getCharactersCharacterIdCorporationhistory(characterId, DATASOURCE, ifNoneMatch);
        assertThat(response).isNotNull().isNotEmpty();
    }

    /**
     * Get jump fatigue
     *
     * Return a character&#39;s jump activation and fatigue information  ---  This route is cached for up to 300 seconds  SSO Scope: esi-characters.read_fatigue.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdFatigueTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        CharacterFatigueResponse response = api.getCharactersCharacterIdFatigue(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotNull();
    }

    /**
     * Get medals
     *
     * Return a list of medals the character has  ---  This route is cached for up to 3600 seconds  SSO Scope: esi-characters.read_medals.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdMedalsTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        List<CharacterMedalsResponse> response = api.getCharactersCharacterIdMedals(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotNull().isNotEmpty();
    }

    /**
     * Get character notifications
     *
     * Return character notifications  ---  This route is cached for up to 600 seconds  SSO Scope: esi-characters.read_notifications.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdNotificationsTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        List<CharacterNotificationsResponse> response = api.getCharactersCharacterIdNotifications(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotNull().isNotEmpty();
    }

    /**
     * Get new contact notifications
     *
     * Return notifications about having been added to someone&#39;s contact list  ---  This route is cached for up to 600 seconds  SSO Scope: esi-characters.read_notifications.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdNotificationsContactsTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        List<NewContactNotificationsResponse> response = api.getCharactersCharacterIdNotificationsContacts(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotNull();
    }

    /**
     * Get character portraits
     *
     * Get portrait urls for a character  ---  This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdPortraitTest() throws ApiException {
        String ifNoneMatch = null;
        CharacterPortraitResponse response = api.getCharactersCharacterIdPortrait(characterId, DATASOURCE, ifNoneMatch);
        assertThat(response).isNotNull();
        final String icon = response.getPx64x64();
        assertThat(icon).isNotNull();
        assertThat(icon.isEmpty()).isFalse();
    }

    /**
     * Get character corporation roles
     *
     * Returns a character&#39;s corporation roles  ---  This route is cached for up to 3600 seconds  SSO Scope: esi-characters.read_corporation_roles.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdRolesTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        CharacterRolesResponse response = api.getCharactersCharacterIdRoles(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotNull();
    }

    /**
     * Get standings
     *
     * Return character standings from agents, NPC corporations, and factions  ---  This route is cached for up to 3600 seconds  SSO Scope: esi-characters.read_standings.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdStandingsTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        List<CharacterStandingsResponse> response = api.getCharactersCharacterIdStandings(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotNull().isNotEmpty();
    }

    /**
     * Get character corporation titles
     *
     * Returns a character&#39;s titles  ---  This route is cached for up to 3600 seconds  SSO Scope: esi-characters.read_titles.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdTitlesTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        List<CharacterTitlesResponse> response = api.getCharactersCharacterIdTitles(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotNull();
    }

    /**
     * Character affiliation
     *
     * Bulk lookup of character IDs to corporation, alliance and faction  ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCharactersAffiliationTest() throws ApiException {
        Set<Integer> characters = new HashSet<>();
        characters.add(characterId);
        List<CharacterAffiliationResponse> response = api.postCharactersAffiliation(characters, DATASOURCE);
        assertThat(response).isNotNull().isNotEmpty();
    }

    /**
     * Calculate a CSPA charge cost
     *
     * Takes a source character ID in the url and a set of target character ID&#39;s in the body, returns a CSPA charge cost  ---   SSO Scope: esi-characters.read_contacts.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCharactersCharacterIdCspaTest() throws ApiException {
        Set<Integer> characters = new HashSet<>();
        characters.add(CHARACTER_ID_CHRIBBA);
        String token = null;
        Float response = api.postCharactersCharacterIdCspa(characterId, characters, DATASOURCE, token);
        assertThat(response).isNotNull().isEqualTo(0f);
    }

}
