/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.33
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.troja.eve.esi.api;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.CharacterWalletJournalResponse;
import net.troja.eve.esi.model.CharacterWalletTransactionsResponse;
import net.troja.eve.esi.model.CorporationWalletJournalResponse;
import net.troja.eve.esi.model.CorporationWalletTransactionsResponse;
import net.troja.eve.esi.model.CorporationWalletsResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * API tests for WalletApi
 */
public class WalletApiTest extends GeneralApiTest {

    private final WalletApi api = new WalletApi();

    @BeforeEach
    public void setUp() {
        api.setApiClient(apiClient);
    }

    /**
     * Get a character&#39;s wallet balance
     *
     * Returns a character&#39;s wallet balance  ---  This route is cached for up to 120 seconds  --- [Diff of the upcoming changes](https://esi.evetech.net/diff/latest/dev/#GET-/characters/{character_id}/wallet/)  SSO Scope: esi-wallet.read_character_wallet.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdWalletTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        Double response = api.getCharactersCharacterIdWallet(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isGreaterThan(0d);
    }

    /**
     * Get character wallet journal
     *
     * Retrieve the given character&#39;s wallet journal going 30 days back  ---  This route is cached for up to 3600 seconds  SSO Scope: esi-wallet.read_character_wallet.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdWalletJournalTest() throws ApiException {
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<CharacterWalletJournalResponse> response = api.getCharactersCharacterIdWalletJournal(characterId, DATASOURCE, ifNoneMatch, page, token);
        assertThat(response).isNotEmpty();
        final CharacterWalletJournalResponse characterWalletJournalResponse = response.get(0);
        assertThat(characterWalletJournalResponse.getBalance()).isGreaterThan(0d);
    }

    /**
     * Get wallet transactions
     *
     * Get wallet transactions of a character  ---  This route is cached for up to 3600 seconds  SSO Scope: esi-wallet.read_character_wallet.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdWalletTransactionsTest() throws ApiException {
        Long fromId = null;
        String ifNoneMatch = null;
        String token = null;
        List<CharacterWalletTransactionsResponse> response = api.getCharactersCharacterIdWalletTransactions(characterId, DATASOURCE, fromId, ifNoneMatch, token);
        assertThat(response).isNotEmpty();
    }

    /**
     * Returns a corporation&#39;s wallet balance
     *
     * Get a corporation&#39;s wallets  ---  This route is cached for up to 300 seconds  --- Requires one of the following EVE corporation role(s): Accountant, Junior_Accountant  SSO Scope: esi-wallet.read_corporation_wallets.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs corporation with read access")
    public void getCorporationsCorporationIdWalletsTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String ifNoneMatch = null;
        String token = null;
        List<CorporationWalletsResponse> response = api.getCorporationsCorporationIdWallets(corporationId, datasource, ifNoneMatch, token);
        // TODO: test validations
    }

    /**
     * Get corporation wallet journal
     *
     * Retrieve the given corporation&#39;s wallet journal for the given division going 30 days back  ---  This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Accountant, Junior_Accountant  SSO Scope: esi-wallet.read_corporation_wallets.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs corporation with read access")
    public void getCorporationsCorporationIdWalletsDivisionJournalTest() throws ApiException {
        Integer corporationId = null;
        Integer division = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<CorporationWalletJournalResponse> response = api.getCorporationsCorporationIdWalletsDivisionJournal(corporationId, division, datasource, ifNoneMatch, page, token);
        // TODO: test validations
    }

    /**
     * Get corporation wallet transactions
     *
     * Get wallet transactions of a corporation  ---  This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Accountant, Junior_Accountant  SSO Scope: esi-wallet.read_corporation_wallets.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @Disabled("Needs corporation with read access")
    public void getCorporationsCorporationIdWalletsDivisionTransactionsTest() throws ApiException {
        Integer corporationId = null;
        Integer division = null;
        String datasource = null;
        Long fromId = null;
        String ifNoneMatch = null;
        String token = null;
        List<CorporationWalletTransactionsResponse> response = api.getCorporationsCorporationIdWalletsDivisionTransactions(corporationId, division, datasource, fromId, ifNoneMatch, token);
        // TODO: test validations
    }

}
