/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.33
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.troja.eve.esi.api;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.CharacterLoyaltyPointsResponse;
import net.troja.eve.esi.model.LoyaltyStoreOffersResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.assertj.core.api.Assertions.as;
import static org.assertj.core.api.Assertions.assertThat;

/**
 * API tests for LoyaltyApi
 */
@Disabled
public class LoyaltyApiTest extends GeneralApiTest {

    private final LoyaltyApi api = new LoyaltyApi();

    @BeforeEach
    public void setUp() {
        api.setApiClient(apiClient);
    }

    /**
     * Get loyalty points
     *
     * Return a list of loyalty points for all corporations the character has worked for  ---  This route is cached for up to 3600 seconds  SSO Scope: esi-characters.read_loyalty.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdLoyaltyPointsTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        List<CharacterLoyaltyPointsResponse> response = api.getCharactersCharacterIdLoyaltyPoints(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotEmpty();
        assertThat(response.get(0).getLoyaltyPoints()).isGreaterThan(0);
    }

    /**
     * List loyalty store offers
     *
     * Return a list of offers from a specific corporation&#39;s loyalty store  ---  This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLoyaltyStoresCorporationIdOffersTest() throws ApiException {
        final Integer corporationId = 1000035;
        String ifNoneMatch = null;
        List<LoyaltyStoreOffersResponse> response = api.getLoyaltyStoresCorporationIdOffers(corporationId, DATASOURCE, ifNoneMatch);
        assertThat(response).isNotEmpty();
        assertThat(response.get(0).getLpCost()).isGreaterThan(0);
    }

}
