/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.33
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.troja.eve.esi.api;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.CharacterClonesResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * API tests for ClonesApi
 */
public class ClonesApiTest extends GeneralApiTest {

    private final ClonesApi api = new ClonesApi();

    @BeforeEach
    public void setUp() {
        api.setApiClient(apiClient);
    }

    /**
     * Get clones
     *
     * A list of the character&#39;s clones  ---  This route is cached for up to 120 seconds  SSO Scope: esi-clones.read_clones.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdClonesTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        CharacterClonesResponse response = api.getCharactersCharacterIdClones(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotNull();
        assertThat(response.getJumpClones()).hasSizeGreaterThan(0);
    }

    /**
     * Get active implants
     *
     * Return implants on the active clone of a character  ---  This route is cached for up to 120 seconds  SSO Scope: esi-clones.read_implants.v1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdImplantsTest() throws ApiException {
        String ifNoneMatch = null;
        String token = null;
        List<Integer> response = api.getCharactersCharacterIdImplants(characterId, DATASOURCE, ifNoneMatch, token);
        assertThat(response).isNotNull();
    }
}
